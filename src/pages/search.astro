---
import Layout from "../layouts/Layout.astro";
import Container from "../components/app/Container.astro";
import Section from "../components/app/Section.astro";
import Input from "../components/app/Input.astro";
import Card from "../components/app/Card.astro";
---

<Layout navbarBordered>
    <Container class="py-8">
        <Section tag="main" level={1} title="Pencarian" description="Cari panduan, artikel, tutorial atau topik yang kamu butuhkan.">
            <Input id="search" color="light" fullwidth placeholder="Cari sesuatu" name="q" type="search" size="lg" />

            <Card id="search-result" class="hidden divide-y divide-gray-300 px-4" padless></Card>
        </Section>
    </Container>
</Layout>

<script>
const query = new URLSearchParams(window.location.search)
const searchNavbarInput = document.querySelector<HTMLInputElement>('#navbar-search') 
const searchInput = document.querySelector<HTMLInputElement>('#search')
const searchResultContainer = document.querySelector<HTMLDivElement>('#search-result')

let searchData: { title: string, url: string, description: string }[] = []

let q = query.get('q') ?? ''

searchNavbarInput?.setAttribute('value', q)
searchInput?.setAttribute('value', q)

loadSearchData()

async function loadSearchData() {
    const res = await fetch('/search.json')
    const data = await res.json()

    searchData = data

    if (q) {
        search()
    }
}

function search() {
    if (searchResultContainer?.classList.contains('hidden')) {
        searchResultContainer?.classList.remove('hidden')
    }
    
    const found = searchData.filter(article => article.title.toLowerCase().includes(q) || article.description.toLowerCase().includes(q))

    searchResultContainer?.replaceChildren()

    const result = document.createDocumentFragment()

    if (!found.length) {
        const message = document.createElement('p')

        message.classList.add('py-4', 'text-gray-700')
        message.textContent = `Tidak ada hasil yang ditemukan untuk "${q}"`

        result.appendChild(message)
    } else {
        found.forEach(article => {
            const container = document.createElement('article')
            const title = document.createElement('h2')
            const link = document.createElement('a')
            const description = document.createElement('p')

            container.classList.add('space-y-1', 'py-4')
            title.classList.add('font-bold', 'text-lg', 'text-gray-900', 'hover:underline')
            description.classList.add('text-gray-700')

            link.href = article.url
            link.textContent = article.title
            description.textContent = article.description

            title.appendChild(link)

            container.appendChild(title)
            container.appendChild(description)

            result.appendChild(container)
        })
    }

    searchResultContainer?.appendChild(result)
}

searchInput?.addEventListener('input', () => {
    q = searchInput.value

    search()
})
</script>