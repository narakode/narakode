---
import { getCollection } from 'astro:content';
import Layout from '../../../layouts/Layout.astro';
import Container from '../../../components/app/Container.astro';
import Card from '../../../components/app/Card.astro';
import { render } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import { getEntry } from 'astro:content';
import Link from '../../../components/app/Link.astro';
import Button from '../../../components/app/Button.astro';
import Breadcrumb from '../../../components/app/Breadcrumb.astro';
import Dropdown from '../../../components/app/Dropdown.astro';
import TableOfContent from '../../../components/TableOfContent.astro';
import { Icon } from 'astro-icon/components';

export async function getStaticPaths() {
    const articles = await getCollection('article', article => article.data.type === 'course')

    return articles.map(article => {
        const course = article.data.course as CollectionEntry<'course'>

        return {
            params: {
                id: course.id,
                articleId: article.id
            },
            props: { article, articleCourse: course }
        }
    })
}

const { article, articleCourse } = Astro.props
const course = await getEntry(articleCourse)
const courseItems = await getCollection('article', article => article.data.course?.id === course.id)
const { Content, headings } = await render(article)
const currentItemIndex = courseItems.findIndex(item => item.id === article.id)
const hasNext = courseItems.length > 1 && currentItemIndex < courseItems.length - 1
const nextItem = hasNext ? courseItems[currentItemIndex + 1] : null
const hasPrev = courseItems.length > 1 && currentItemIndex > 0
const prevItem = hasPrev ? courseItems[currentItemIndex - 1] : null
---

<Layout navbarBordered title={article.data.title} description={article.data.description}>
    <Container class="py-8 space-y-4">
        <div class="flex flex-col items-start gap-4 lg:flex-row lg:items-center lg:justify-between lg:gap-0">
            <Breadcrumb
                links={[
                    { href: '/courses', name: 'Belajar' },
                    { href: `/courses/${course.id}`, name: course.data.title }
                ]}
                active={article.data.title}
            />
            <div class="w-full flex items-center justify-between gap-2 lg:w-auto xl:hidden">
                <Dropdown id="articles-mobile-dropdown" position='left' class="lg:hidden">
                    <Button slot="trigger" dataToggle="dropdown" dataTarget="#articles-mobile-dropdown" size="sm" color='light' icon='tabler:checkup-list' iconPosition='start'>Daftar Materi</Button>

                    <ol class="space-y-1">
                        {courseItems.map((item, index) => <li>
                            {article.id === item.id
                                ? <p class="font-semibold text-red-900">{index + 1}. {item.data.title}</p>
                                : <Link href={`/courses/${course.id}/${item.id}`}>{index + 1}. {item.data.title}</Link>
                            }
                        </li>)}
                    </ol>
                </Dropdown>
                <Dropdown id="toc-mobile-dropdown" class="xl:hidden">
                    <Button slot="trigger" dataToggle="dropdown" dataTarget="#toc-mobile-dropdown" size="sm" color='light' icon='tabler:list' iconPosition='start'>Daftar Isi</Button>

                    <TableOfContent headings={headings} />
                </Dropdown>
            </div>
        </div>
        <main class="grid gap-4 items-start lg:grid-cols-6 xl:grid-cols-5">
            <Card tag='aside' class='hidden lg:block lg:col-span-2 lg:sticky lg:top-4 lg:left-0 xl:col-span-1'>
                <h2 class="font-bold text-2xl mb-4">{course.data.title}</h2>
                <ol class="space-y-1">
                    {courseItems.map((item, index) => <li>
                        {article.id === item.id
                            ? <p class="font-semibold text-red-900">{index + 1}. {item.data.title}</p>
                            : <Link href={`/courses/${course.id}/${item.id}`}>{index + 1}. {item.data.title}</Link>
                        }
                    </li>)}
                </ol>
            </Card>
            <div class="col-span-4 space-y-4 xl:col-span-3">
                <Card id='article-content' tag='article' class="prose prose-pre:whitespace-pre-wrap w-full max-w-none p-5">
                    <h1>{article.data.title}</h1>
                    <Content />
                </Card>

                <nav class=`flex flex-col ${hasPrev ? 'justify-between' : 'justify-end'} gap-2 sm:flex-row sm:items-center`>
                    {hasPrev && <Link href={`/courses/${course.id}/${prevItem?.id}`} class="flex items-center gap-2">
                        <Icon name="tabler:chevron-left" />
                        <p class=" line-clamp-1">
                            {prevItem?.data.title}
                        </p>
                    </Link>}
                    {hasNext && <Link href={`/courses/${course.id}/${nextItem?.id}`} class="flex items-center justify-end text-right gap-2">
                        <p class=" line-clamp-1">
                            {nextItem?.data.title}
                        </p>
                        <Icon name="tabler:chevron-right" />
                    </Link>}
                </nav>
            </div>
            <Card tag='aside' class='hidden xl:block xl:sticky xl:top-4 xl:right-0'>
                <h2 class="font-bold text-2xl mb-4">Daftar Isi</h2>
                <TableOfContent headings={headings} />
            </Card>
        </main>
    </Container>
</Layout>